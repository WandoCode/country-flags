{"version":3,"file":"static/css/main.9ab42a16.css","mappings":"AAYA,MAIM,2ECyBE,wIAYJ,4DDrCE,CETJ,wBDyBF,MAcU,yIE7CV,iBAGE,sBAIF,iDAYE,SAIF,MAEE,gBACA,UAIF,kBACE,uBAIF,KAGE,gBAFA,iBACA,4BACA,CAIF,eACE,+DAIF,YAGE,cADA,cACA,CAIF,6BAIE,aAIF,sCACE,kBACE,qBAGF,iBAGE,8EACA,oFAEA,+BADA,mCACA,EClEJ,KACE,sBASF,iBAGE,mBAGF,MAEE,YADA,eACA,CCrBF,KACE,6BACA,kCCJgB,CDKhB,0CAGF,IACE,0CETF,QACE,aACA,8BCCF,QACE,qBCIF,WAEE,iBACA,kBAFA,eHNU,CGSV,kBACA,mBACA,WAQF,WACE,gBACA,UACA,iBACA,mBAQF,iBAEE,mBADA,SAEA,WACA,YACA,gBACA,UACA,kBACA","sources":["stylesheets/abstracts/_colors.scss","stylesheets/abstracts/_font-sizes.scss","stylesheets/abstracts/_mixins.scss","stylesheets/base/_normalize.scss","stylesheets/base/_base.scss","stylesheets/base/_typography.scss","stylesheets/abstracts/_variables.scss","stylesheets/layout/_header.scss","stylesheets/components/_button.scss","stylesheets/utilities/_helpers.scss"],"sourcesContent":["// -----------------------------------------------------------------------------\r\n// This file contains all application-wide Sass variables.\r\n// -----------------------------------------------------------------------------\r\n$colors: (\r\n  primary: (),\r\n  neutral: (\r\n    100: hsl(0, 0%, 100%),\r\n    200: hsl(0, 0%, 98%),\r\n    800: hsl(200, 15%, 8%),\r\n  ),\r\n);\r\n\r\n:root {\r\n  /// Build css custom variables for colors\r\n  @each $color-type, $shades in $colors {\r\n    @each $shade, $color in $shades {\r\n      --clr-#{$color-type}-#{$shade}: #{$color};\r\n    }\r\n  }\r\n}\r\n","@use './mixins' as *;\r\n\r\n$scale: (\r\n  sm: (\r\n    200: rem(12),\r\n    300: rem(12),\r\n    400: rem(14),\r\n    500: rem(14),\r\n    600: rem(14),\r\n    700: rem(18),\r\n    800: rem(16),\r\n    900: rem(22),\r\n  ),\r\n  lg: (\r\n    200: rem(14),\r\n    300: rem(16),\r\n    400: rem(14),\r\n    500: rem(16),\r\n    600: rem(24),\r\n    700: rem(18),\r\n    800: rem(16),\r\n    900: rem(32),\r\n  ),\r\n);\r\n\r\n$weights: (\r\n  light: 300,\r\n  normal: 400,\r\n  bold: 600,\r\n  bolder: 800,\r\n);\r\n\r\n:root {\r\n  /// Build css custom variables for font-size\r\n  /// It integer a media query for each font (mobile-first)\r\n  /// Une autre solution serait d'utiliser clamp()\r\n  /// ==> clamp(valFixMinEnREM, valFixEnREMPlusValEnVW, valFixMaxEnREM)\r\n  /// ==> valFixMinEnREM sont les valeur pour 'small' et valFixMaxEnREM sont les valeurs pour 'large'\r\n  @each $screen-size, $font-size in $scale {\r\n    @if $screen-size == 'sm' {\r\n      @each $size, $value in $font-size {\r\n        --fs-#{$size}: #{$value};\r\n      }\r\n    } @else {\r\n      @include breakpoint(large) {\r\n        @each $size, $value in $font-size {\r\n          --fs-#{$size}: #{$value};\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @each $name, $value in $weights {\r\n    --fw-#{$name}: #{$value};\r\n  }\r\n}\r\n","// -----------------------------------------------------------------------------\r\n// This file contains all application-wide Sass mixins.\r\n// -----------------------------------------------------------------------------\r\n@use './breakpoints' as *;\r\n\r\n@mixin breakpoint($key) {\r\n  $size: map-get($breakpoints, $key);\r\n  @media (min-width: $size) {\r\n    @content;\r\n  }\r\n}\r\n\r\n/// Event wrapper\r\n/// @author Harry Roberts\r\n/// @param {Bool} $self [false] - Whether or not to include current selector\r\n/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts\r\n@mixin on-event($self: false) {\r\n  @if $self {\r\n    &,\r\n    &:hover,\r\n    &:active,\r\n    &:focus,\r\n    &:focus-within {\r\n      @content;\r\n    }\r\n  } @else {\r\n    &:hover,\r\n    &:active,\r\n    &:focus,\r\n    &:focus-within {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n/// Make a context based selector a little more friendly\r\n/// @author Kitty Giraudel\r\n/// @param {String} $context\r\n@mixin when-inside($context) {\r\n  #{$context} & {\r\n    @content;\r\n  }\r\n}\r\n","/* Box sizing rules */\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* Remove default margin */\r\nbody,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\np,\r\nfigure,\r\nblockquote,\r\ndl,\r\ndd,\r\nul,\r\nol {\r\n  margin: 0;\r\n}\r\n\r\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\r\nul,\r\nol {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n/* Set core root defaults */\r\nhtml:focus-within {\r\n  scroll-behavior: smooth;\r\n}\r\n\r\n/* Set core body defaults */\r\nbody {\r\n  min-height: 100vh;\r\n  text-rendering: optimizeSpeed;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* A elements that don't have a class get default styles */\r\na:not([class]) {\r\n  text-decoration-skip-ink: auto;\r\n}\r\n\r\n/* Make images easier to work with */\r\nimg,\r\npicture {\r\n  max-width: 100%;\r\n  display: block;\r\n}\r\n\r\n/* Inherit fonts for inputs and buttons */\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n\r\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\r\n@media (prefers-reduced-motion: reduce) {\r\n  html:focus-within {\r\n    scroll-behavior: auto;\r\n  }\r\n\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    animation-duration: 0.01ms !important;\r\n    animation-iteration-count: 1 !important;\r\n    transition-duration: 0.01ms !important;\r\n    scroll-behavior: auto !important;\r\n  }\r\n}\r\n","// -----------------------------------------------------------------------------\r\n// This file contains very basic styles.\r\n// -----------------------------------------------------------------------------\r\n@use '../abstracts/' as *;\r\n\r\n/**\r\n * Set up a decent box model on the root element\r\n */\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n/**\r\n * Make all elements from the DOM inherit from the parent box-sizing\r\n * Since `*` has a specificity of 0, it does not override the `html` value\r\n * making all elements inheriting from the root box-sizing value\r\n * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/\r\n */\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: inherit;\r\n}\r\n\r\n.main {\r\n  max-width: $max-width;\r\n  margin: auto;\r\n}\r\n","/**\r\n * Basic typography style for copy text\r\n */\r\n@use '../abstracts/' as *;\r\n\r\nbody {\r\n  color: var(--clr-neutral-400);\r\n  font-family: $text-font-stack;\r\n  font-size: var(--fs-300);\r\n}\r\n\r\n.h1 {\r\n  font-size: var(--fs-600);\r\n}\r\n","@use './functions' as *;\r\n\r\n/// Regular font family\r\n$text-font-stack: 'Nunito Sans', sans-serif;\r\n\r\n/// Container's maximum width\r\n$max-width: rem(1440);\r\n","// -----------------------------------------------------------------------------\r\n// This file contains all styles related to the header of the site/application.\r\n// -----------------------------------------------------------------------------\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n","// -----------------------------------------------------------------------------\r\n// This file contains all styles related to the button component.\r\n// -----------------------------------------------------------------------------\r\n\r\n@use '../abstracts/' as *;\r\n\r\n.button {\r\n  background-color: red;\r\n}\r\n","// -----------------------------------------------------------------------------\r\n// This file contains CSS helper classes.\r\n// -----------------------------------------------------------------------------\r\n@use '../abstracts/' as *;\r\n\r\n/**\r\n * Main content containers\r\n * 1. Make the container full-width with a maximum width\r\n * 2. Center it in the viewport\r\n * 3. Leave some space on the edges, especially valuable on small screens\r\n */\r\n.container {\r\n  max-width: $max-width; /* 1 */\r\n  margin-left: auto; /* 2 */\r\n  margin-right: auto; /* 2 */\r\n  padding-left: 20px; /* 3 */\r\n  padding-right: 20px; /* 3 */\r\n  width: 100%; /* 1 */\r\n}\r\n\r\n/**\r\n * Hide text while making it readable for screen readers\r\n * 1. Needed in WebKit-based browsers because of an implementation bug;\r\n *    See: https://code.google.com/p/chromium/issues/detail?id=457146\r\n */\r\n.hide-text {\r\n  overflow: hidden;\r\n  padding: 0; /* 1 */\r\n  text-indent: 101%;\r\n  white-space: nowrap;\r\n}\r\n\r\n/**\r\n * Hide element while making it readable for screen readers\r\n * Shamelessly borrowed from HTML5Boilerplate:\r\n * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133\r\n */\r\n.visually-hidden {\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  width: 1px;\r\n}\r\n"],"names":[],"sourceRoot":""}